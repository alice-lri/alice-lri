name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [ "cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*", "cp313-*", "cp313t-*", "cp314-*", "cp314t-*" ]
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_BUILD: ${{ matrix.python }} 
          CIBW_ENABLE: cpython-freethreading
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_i686"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_BUILD: "pip install conan && conan profile detect --force"
        with:
          package-dir: './python'

      - name: Sanitize artifact name
        id: sanitize
        shell: bash
        run: |
          PYTHON_VER="${{ matrix.python }}"
          SAFE_PYTHON_VER="${PYTHON_VER/-*/}"
          echo "safe_name=${SAFE_PYTHON_VER}" >> $GITHUB_OUTPUT

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ steps.sanitize.outputs.safe_name }}
          path: wheelhouse/*.whl
          retention-days: 7

  build-cpp-tarball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract_version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Tag Version: $VERSION"

      - name: Create C++ tarball
        shell: bash
        run: |
          CPP_TARBALL_NAME="alice-lri-${{ env.VERSION }}-cpp-lib.tar.gz"
          tar -czf "$CPP_TARBALL_NAME" -C lib . 
          echo "CPP_TARBALL_NAME=$CPP_TARBALL_NAME" >> $GITHUB_ENV

      - name: Upload C++ tarball as artifact
        uses: actions/upload-artifact@v4
        with:
          name: cpp-tarball
          path: ${{ env.CPP_TARBALL_NAME }}
          retention-days: 7

  create-release:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-cpp-tarball]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4


      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*"
          merge-multiple: true
          path: release-assets/

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          files: release-assets/*

  publish-pypi:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      id-token: write
    steps:

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-documentation:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4

      - name: Deploy documentation
        uses: ./.github/actions/deploy-documentation
