name: Release
on:
  release:
    types: [ created ]

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_BUILD_VERBOSITY: 1

      - name: Upload wheels as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
          retention-days: 1

      - name: Find wheel file
        id: find_wheel
        shell: bash
        run: echo "WHEEL_PATH=$(ls wheelhouse/*.whl)" >> $GITHUB_ENV

      - name: Get wheel filename
        id: wheel_name
        shell: bash
        run: echo "WHEEL_NAME=$(basename $WHEEL_PATH)" >> $GITHUB_ENV

      - name: Attach wheel to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.WHEEL_PATH }}
          asset_name: ${{ env.WHEEL_NAME }}
          asset_content_type: application/octet-stream


  publish-pypi:
    needs: [ build-wheels ]
    runs-on: ubuntu-latest

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      # TODO probably only when release is published
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      # TODO probably only when release is published
      - name: Prepare and submit ConanCenter PR # TODO probably this needs fixing
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

          # Clone your fork
          git clone "https://github.com/${GITHUB_ACTOR}/conan-center-index.git"
          cd conan-center-index
          git remote add upstream https://github.com/conan-io/conan-center-index.git
          git fetch upstream

          BRANCH="add-alice_lri-0.1.0"
          git checkout -b "$BRANCH" upstream/master

          mkdir -p recipes/alice_lri/all
          cp ../lib/conanfile.py recipes/alice_lri/all/conanfile.py

          git add recipes/alice_lri/all/conanfile.py
          git commit -m "Add alice_lri 0.1.0 recipe"
          git push origin "$BRANCH"

          # Create PR using GitHub CLI
          echo $GH_TOKEN | gh auth login --with-token
          gh pr create --title "Add alice_lri 0.1.0" \
            --body "Submitting alice_lri 0.1.0 to ConanCenter" \
            --base master --head "$BRANCH"
